# Minimal example values file for AxonOps

axon-server:
  image:
    repository: registry.axonops.com/axonops-public/axonops-docker/axon-server
    tag: latest
    pullPolicy: IfNotPresent

  # Configure the Elasticsearch endpoint
  elasticHost: http://axonops-elastic-master:9200

  # dashboardUrl should be set to the publicly-accessible URL for the AxonOps Dashboard
  dashboardUrl: https://axonops.example.com

  # Configure an ingress for external agents to connect
  agentIngress:
    enabled: true
    className: nginx
    annotations: {}
    hosts:
      - host: axonops-agents.example.com

  # Configure resources for the AxonOps Server pod.
  # See https://docs.axonops.com/installation/kubernetes/ for some guidelines
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # AxonOps Server configuration
  config:
    # Configure the name of your organisation here. This must match the organisation name used in your license key.
    org_name: "example"
    # Enter your AxonOps license key here
    license_key: ""


axon-dash:
  image:
    repository: registry.axonops.com/axonops-public/axonops-docker/axon-dash
    tag: latest
    pullPolicy: IfNotPresent

  ingress:
    enabled: true
    className: nginx
    annotations: {}
    hosts:
      - host: axonops.example.com

  # Resource requests and limits for the dashboard pods.
  # The recommended values are shown here
  resources:
    requests:
      cpu: 10m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1500Mi

elasticsearch:
  enabled: false
  clusterName: "axonops-elastic"

  replicas: 1

  esConfig:
    elasticsearch.yml: |
      thread_pool.write.queue_size: 2000

  roles:
    master: "true"
    ingest: "true"
    data: "true"
    remote_cluster_client: "false"
    ml: "false"

  # Adjust the memory and cpu requirements to your deployment
  # 
  esJavaOpts: "-Xms8g -Xmx8g"

  resources:
    requests:
      cpu: "2"
      memory: "12Gi"
    limits:
      cpu: "4"
      memory: "12Gi"

  volumeClaimTemplate:
    accessModes: ["ReadWriteOnce"]
    storageClassName: "" # adjust to your storageClass if you don't want to use default
    resources:
      requests:
        storage: 50Gi

  rbac:
    create: true